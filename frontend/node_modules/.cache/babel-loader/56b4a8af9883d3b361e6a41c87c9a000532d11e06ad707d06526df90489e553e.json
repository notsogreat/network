{"ast":null,"code":"var _jsxFileName = \"/Users/ashishheda/go/src/network/frontend/src/dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const fileInputRef = useRef(null);\n  const handleFileUpload = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  const handleFileChange = e => {\n    const file = e.target.files && e.target.files[0];\n    // Do something with the selected file, like uploading it to a server.\n    console.log(\"Selected file:\", file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: \"none\"\n      },\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Dashboard","_s","fileInputRef","handleFileUpload","current","click","handleFileChange","e","file","target","files","console","log","children","type","ref","style","display","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ashishheda/go/src/network/frontend/src/dashboard.tsx"],"sourcesContent":["import React, { useRef, ChangeEvent } from \"react\";\n\nconst Dashboard: React.FC = () => {\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleFileUpload = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files && e.target.files[0];\n    // Do something with the selected file, like uploading it to a server.\n    console.log(\"Selected file:\", file);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: \"none\" }}\n        onChange={handleFileChange}\n      />\n      <button onClick={handleFileUpload}>Upload File</button>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAqB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,YAAY,GAAGL,MAAM,CAA0B,IAAI,CAAC;EAE1D,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAID,YAAY,CAACE,OAAO,EAAE;MACxBF,YAAY,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAgC,IAAK;IAC7D,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,IAAIH,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChD;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;EACrC,CAAC;EAED,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,GAAG,EAAEb,YAAa;MAClBc,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,QAAQ,EAAEZ;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFvB,OAAA;MAAQwB,OAAO,EAAEpB,gBAAiB;MAAAU,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1BID,SAAmB;AAAAwB,EAAA,GAAnBxB,SAAmB;AA4BzB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}